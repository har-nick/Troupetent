[versions]
android-sdk-min = "21"
android-sdk-compile = "35"
agp = "8.8.0" # https://mvnrepository.com/artifact/com.android.tools.build/gradle
compose-multiplatform = "1.7.3" # https://github.com/JetBrains/compose-multiplatform
coroutines = "1.9.0" # https://github.com/Kotlin/kotlinx.coroutines
media3 = "1.5.1" # https://developer.android.com/jetpack/androidx/releases/media3
jdk = "21"
kotlin = "2.0.21" # https://kotlinlang.org/docs/releases.html
ktor = "3.0.1" # https://ktor.io/docs/releases.html
sqldelight = "2.0.2" # https://github.com/cashapp/sqldelight

[libraries]
# Android
androidx-core = { module = "androidx.core:core", version = "1.15.0" }
androidx-splashscreen = { module = "androidx.core:core-splashscreen", version = "1.0.1" }
compose-activity = { module = "androidx.activity:activity-compose", version = "1.10.0" }
compose-navigation = { module = "androidx.compose.material3:material3-adaptive-navigation-suite", version = "1.3.1" }
compose-preview = { module = "androidx.compose.ui:ui-tooling-preview", version = "1.7.6" }

# BandKit
bandkit = { module = "uk.co.harnick:bandkit", version = "latest.integration" }

# Compose-MP
compose-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version = "2.8.2" }
compose-webview = { module = "io.github.kevinnzou:compose-webview-multiplatform", version = "1.9.8" }
chrisbanes-windowsizeclass = { module = "dev.chrisbanes.material3:material3-window-size-class-multiplatform", version = "0.5.0" }

# Debug
leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version = "3.0-alpha-7" }
rebugger = { module = "io.github.theapache64:rebugger", version = "1.0.0-rc03" }

# Kotlinx-Coroutines
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-jvm = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "coroutines" }
coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }

# Kotlin Reflection
reflection = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

# Ktor
ktor-engine-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

# Material You Backporting
kmpalette-core = { module = "com.kmpalette:kmpalette-core", version = "3.1.0" }
materialkolor = { module = "com.materialkolor:material-kolor", version = "1.7.0" }

# Media3
media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3" }
media3-exoplayer-ui = { module = "androidx.media3:media3-ui", version.ref = "media3" }
media3-media-session = { module = "androidx.media3:media3-session", version.ref = "media3" }

# SQLDelight
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-driver-jvm = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-primitive-adapters = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqldelight" }

# SystemUtils
systemutils = { module = "org.apache.commons:commons-lang3", version = "3.14.0" }

kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }

jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }

kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }

kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }

[bundles]
debug = ["leakcanary", "rebugger"]
media3 = ["media3-exoplayer", "media3-exoplayer-ui", "media3-media-session"]
ktor = ["ktor-content-negotiation", "ktor-engine-cio", "ktor-core", "ktor-serialization-json"]
material-you-utils = ["kmpalette-core", "materialkolor"]
sqldelight-utils = ["sqldelight-coroutines", "sqldelight-primitive-adapters"]
