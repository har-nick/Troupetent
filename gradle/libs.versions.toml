[versions]
agp = "8.1.0"
compose-multiplatform = "1.4.3"
coroutines = "1.7.3"
i18n4k = "0.6.0"
kotlin = "1.9.0"
ktor = "2.3.2"
moko-resources = "0.23.0"
sqldelight = "2.0.0"
voyager = "1.0.0-rc06"

[libraries]
bandkit = { module = "uk.co.harnick:BandKit" }

compose-animations = { module = "org.jetbrains.compose.animation:animation", version.ref = "compose-multiplatform" }
compose-components-resources = { module = "org.jetbrains.compose.components:components-resources", version.ref = "compose-multiplatform" }
compose-foundation = { module = "org.jetbrains.compose.foundation:foundation", version.ref = "compose-multiplatform" }
compose-material3 = { module = "org.jetbrains.compose.material3:material3", version.ref = "compose-multiplatform" }
compose-material-icons-extended = { module = "org.jetbrains.compose.material:material-icons-extended", version.ref = "compose-multiplatform" }
compose-resources = { module = "org.jetbrains.compose.components:components-resources", version.ref = "compose-multiplatform" }
compose-runtime = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "compose-multiplatform" }

coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-jvm = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "coroutines" }
coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }

kamel = { module = "media.kamel:kamel-image", version = "0.7.1" }

kotlinx-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version = "0.3.5" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.4.0" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version = "1.5.1" }

koin-android = { module = "io.insert-koin:koin-android", version = "3.4.2" }
koin-compose = { module = "io.insert-koin:koin-compose", version = "1.0.3" }
koin-core = { module = "io.insert-koin:koin-core", version = "3.4.2" }

ktor-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

moko-resources = { module = "dev.icerock.moko:resources", version.ref = "moko-resources" }
moko-resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko-resources" }

sqldelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-driver-jvm = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }

windowsize = { module = "dev.chrisbanes.material3:material3-window-size-class-multiplatform", version = "0.2.0" }

voyager-nav = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-tab-nav = { module = "cafe.adriel.voyager:voyager-tab-navigator", version.ref = "voyager" }
voyager-transitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyager" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
android-versioning = { id = "io.github.reactivecircus.app-versioning", version = "1.3.1" }

compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }

kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }

kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

moko-resources-generator = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko-resources" }

sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }

[bundles]
compose-multiplatform = [
    "compose-animations",
    "compose-components-resources",
    "compose-foundation",
    "compose-material3",
    "compose-material-icons-extended",
    "compose-resources",
    "compose-runtime"
]
ktor = ["ktor-cio", "ktor-content-negotiation", "ktor-core", "ktor-serialization-json"]
moko = ["moko-resources", "moko-resources-compose"]
voyager = ["voyager-nav", "voyager-tab-nav", "voyager-transitions"]